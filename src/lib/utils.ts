import { clsx, type ClassValue } from "clsx"
import { twMerge } from "tailwind-merge"
import { PayloadToken } from "./types";
import { jwtDecode } from "jwt-decode";

export function cn(...inputs: ClassValue[]) {
    return twMerge(clsx(inputs))
}
/*
1.........clsx(inputs) - clsx("p-2", false && "bg-red-500", "text-sm") // üëâ "p-2 text-sm"
Th∆∞ vi·ªán clsx gi√∫p g·ªôp nhi·ªÅu class name l·∫°i th√†nh m·ªôt chu·ªói duy nh·∫•t, ƒë·ªìng th·ªùi b·ªè qua nh·ªØng gi√° tr·ªã false, null, undefined, 0, v.v.
2.........twMerge(...) - twMerge("p-2 p-4") // üëâ "p-4"
Th∆∞ vi·ªán tailwind-merge c√≥ nhi·ªám v·ª• x·ª≠ l√Ω xung ƒë·ªôt class Tailwind.
‚Üí N·∫øu b·∫°n c√≥ hai class tr√πng nh√≥m (v√≠ d·ª• p-2 v√† p-4), n√≥ s·∫Ω gi·ªØ l·∫°i class sau c√πng h·ª£p l·ªá nh·∫•t:
*/

export function getUserIdFromStorage(): string | null {
    const token = localStorage.getItem("token");

    if (!token) {
        // token ch∆∞a c√≥ ‚Üí tr·∫£ v·ªÅ null
        return null;
    }

    try {
        const payload = jwtDecode<PayloadToken>(token);
        return payload.userId ?? "";
    } catch (err) {
        console.error("Invalid token:", err);
        // n·∫øu decode th·∫•t b·∫°i ‚Üí x√≥a token
        localStorage.removeItem("token");
        localStorage.removeItem("payload-token");
        return null;
    }
}